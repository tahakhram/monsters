{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","onSearchChange","App","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eAClB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHbC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,UCLtBM,G,MAAY,SAAAX,GAAK,OAC1B,uBACMC,UAAU,SACVW,KAAK,SACLC,YAAab,EAAMa,YACnBC,SAAUd,EAAMe,mBCgCXC,E,kDAjCb,aAAc,IAAD,8BACX,gBAYFD,eAAiB,SAAAE,GACf,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAXzC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALJ,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAM3C,WAAS,IAAD,EAC4BC,KAAKN,MAA/Bb,EADF,EACEA,SAAUU,EADZ,EACYA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBACpG,OACE,sBAAK9B,UAAU,MAAf,UACA,kDACE,cAAC,EAAD,CACQY,YAAY,kBACZE,eAAgBa,KAAKb,iBAE7B,cAAC,EAAD,CAAUN,SAAUoB,W,GA5BVI,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.05f524b1.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props =>(\n    <div className='card-container'>\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`} />\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n)","import React from 'react';\nimport './card-list.styles.css';\nimport { Card } from '../card/card.component';\n\nexport const CardList = props => (\n    <div className='card-list'>\n        {\n            props.monsters.map(monster => (\n                <Card key={monster.id} monster={ monster } />\n            ))\n        }\n    </div>\n);\n","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = props => (\n    <input \n          className='search' \n          type='search' \n          placeholder={props.placeholder} \n          onChange={props.onSearchChange}\n    />\n);","import './App.css';\nimport React from 'react';\n\nimport {CardList} from './components/card-list/card-list.component.jsx';\nimport {SearchBox} from './components/search-box/search-box.component.jsx';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchfield: '',\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then( response => response.json() )\n    .then( users => this.setState({monsters: users}))\n  }\n  onSearchChange = event => {\n    this.setState({searchfield: event.target.value})\n  }\n\n  render(){\n    const { monsters, searchfield } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchfield.toLowerCase()));\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n        <SearchBox \n                placeholder='search monsters' \n                onSearchChange={this.onSearchChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}